apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
  labels:
    app: database
  namespace: blog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers: 
      - name: database
        image: mysql:5.7
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "750m"
        ports:
        - containerPort: 3306
        volumeMounts:
          - name: init-data
            mountPath: /docker-entrypoint-initdb.d
          - name: mysql-data
            mountPath: /var/lib/mysql
        env:
          - name: "MYSQL_DATABASE"
            value: "ahmad_blog_api"
          - name: "MYSQL_USER"
            value: "ahmad"
          - name: "MYSQL_ROOT_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: root-password

          - name: "MYSQL_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: password

      initContainers:
      - name: init-myservice
        image: ahmad75/curl
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: init-data
            mountPath: /pod-data
        command: ["sh", "-c"," sleep 2; curl https://raw.githubusercontent.com/Ahmad-Faqehi/Full-Stack-K8S-Cluster/main/assets/data.sql > /pod-data/init.sql"]

      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: db-mysql-pvc
        - name: init-data
          emptyDir: {} 


---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: db-mysql-pv
  namespace: blog
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-mysql-pvc
  namespace: blog
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---

apiVersion: v1
kind: Secret
metadata:
  name: db-secret
  namespace: blog
type: Opaque
data:
  password: U29IYXJkUEBhc3MwcmQ=
  root-password: SHJhZGVyQDIzUGF3NzRwd2QK

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: database        
  name: database-svc
  namespace: blog
spec:
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: database
